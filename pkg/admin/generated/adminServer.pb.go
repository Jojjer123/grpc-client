// Code generated by protoc-gen-go. DO NOT EDIT.
// source: adminServer.proto

package adminServer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MonitorMessage struct {
	Action               string   `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MonitorMessage) Reset()         { *m = MonitorMessage{} }
func (m *MonitorMessage) String() string { return proto.CompactTextString(m) }
func (*MonitorMessage) ProtoMessage()    {}
func (*MonitorMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dab05aafcbc2b2b, []int{0}
}

func (m *MonitorMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonitorMessage.Unmarshal(m, b)
}
func (m *MonitorMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonitorMessage.Marshal(b, m, deterministic)
}
func (m *MonitorMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonitorMessage.Merge(m, src)
}
func (m *MonitorMessage) XXX_Size() int {
	return xxx_messageInfo_MonitorMessage.Size(m)
}
func (m *MonitorMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MonitorMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MonitorMessage proto.InternalMessageInfo

func (m *MonitorMessage) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *MonitorMessage) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type MonitorResponse struct {
	Respone              string   `protobuf:"bytes,1,opt,name=respone,proto3" json:"respone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MonitorResponse) Reset()         { *m = MonitorResponse{} }
func (m *MonitorResponse) String() string { return proto.CompactTextString(m) }
func (*MonitorResponse) ProtoMessage()    {}
func (*MonitorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dab05aafcbc2b2b, []int{1}
}

func (m *MonitorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonitorResponse.Unmarshal(m, b)
}
func (m *MonitorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonitorResponse.Marshal(b, m, deterministic)
}
func (m *MonitorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonitorResponse.Merge(m, src)
}
func (m *MonitorResponse) XXX_Size() int {
	return xxx_messageInfo_MonitorResponse.Size(m)
}
func (m *MonitorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MonitorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MonitorResponse proto.InternalMessageInfo

func (m *MonitorResponse) GetRespone() string {
	if m != nil {
		return m.Respone
	}
	return ""
}

func init() {
	proto.RegisterType((*MonitorMessage)(nil), "adminServer.MonitorMessage")
	proto.RegisterType((*MonitorResponse)(nil), "adminServer.MonitorResponse")
}

func init() { proto.RegisterFile("adminServer.proto", fileDescriptor_9dab05aafcbc2b2b) }

var fileDescriptor_9dab05aafcbc2b2b = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x4c, 0xc9, 0xcd,
	0xcc, 0x0b, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0x72, 0xe0, 0xe2, 0xf3, 0xcd, 0xcf, 0xcb, 0x2c, 0xc9, 0x2f, 0xf2, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0x15, 0x12, 0xe3, 0x62, 0x4b, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x93, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x40, 0xe2, 0x25, 0x89, 0x45, 0xe9, 0xa9, 0x25, 0x12, 0x4c,
	0x10, 0x71, 0x08, 0x4f, 0x49, 0x9b, 0x8b, 0x1f, 0x6a, 0x42, 0x50, 0x6a, 0x71, 0x41, 0x7e, 0x5e,
	0x71, 0xaa, 0x90, 0x04, 0x17, 0x7b, 0x11, 0x98, 0x9d, 0x0a, 0x35, 0x03, 0xc6, 0x35, 0x4a, 0xe5,
	0x12, 0x85, 0x2a, 0x76, 0x04, 0x39, 0xc2, 0x33, 0xaf, 0x24, 0xb5, 0x28, 0x2d, 0x31, 0x39, 0x55,
	0xc8, 0x87, 0x8b, 0x17, 0x2a, 0xe1, 0x92, 0x5a, 0x96, 0x99, 0x9c, 0x2a, 0x24, 0xad, 0x87, 0xec,
	0x72, 0x54, 0x37, 0x4a, 0xc9, 0x60, 0x93, 0x84, 0x59, 0xaf, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0xa9,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x59, 0xa9, 0x69, 0x39, 0xfe, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitorAdminInterfaceClient is the client API for MonitorAdminInterface service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitorAdminInterfaceClient interface {
	MonitorDevice(ctx context.Context, in *MonitorMessage, opts ...grpc.CallOption) (*MonitorResponse, error)
}

type monitorAdminInterfaceClient struct {
	cc *grpc.ClientConn
}

func NewMonitorAdminInterfaceClient(cc *grpc.ClientConn) MonitorAdminInterfaceClient {
	return &monitorAdminInterfaceClient{cc}
}

func (c *monitorAdminInterfaceClient) MonitorDevice(ctx context.Context, in *MonitorMessage, opts ...grpc.CallOption) (*MonitorResponse, error) {
	out := new(MonitorResponse)
	err := c.cc.Invoke(ctx, "/adminServer.MonitorAdminInterface/MonitorDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitorAdminInterfaceServer is the server API for MonitorAdminInterface service.
type MonitorAdminInterfaceServer interface {
	MonitorDevice(context.Context, *MonitorMessage) (*MonitorResponse, error)
}

// UnimplementedMonitorAdminInterfaceServer can be embedded to have forward compatible implementations.
type UnimplementedMonitorAdminInterfaceServer struct {
}

func (*UnimplementedMonitorAdminInterfaceServer) MonitorDevice(ctx context.Context, req *MonitorMessage) (*MonitorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MonitorDevice not implemented")
}

func RegisterMonitorAdminInterfaceServer(s *grpc.Server, srv MonitorAdminInterfaceServer) {
	s.RegisterService(&_MonitorAdminInterface_serviceDesc, srv)
}

func _MonitorAdminInterface_MonitorDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MonitorMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorAdminInterfaceServer).MonitorDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adminServer.MonitorAdminInterface/MonitorDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorAdminInterfaceServer).MonitorDevice(ctx, req.(*MonitorMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitorAdminInterface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adminServer.MonitorAdminInterface",
	HandlerType: (*MonitorAdminInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MonitorDevice",
			Handler:    _MonitorAdminInterface_MonitorDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adminServer.proto",
}
